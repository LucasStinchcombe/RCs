# Bashrc that keeps me from ending it all.

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

venv_tag() {
    if [ ! -z "$VIRTUAL_ENV" ]; then
        echo "(venv)"
    fi
}

random_artwork()
{
    local ARTWORK_DIR=~/RCs/assets/artwork

    # random file in $ARTWORK_DIR directory
    local RAND=$(shuf -i 1-"$(ls $ARTWORK_DIR | wc -l)" -n 1)
    local FILE=$(ls $ARTWORK_DIR | head -n $RAND | tail -1)
    cat "${ARTWORK_DIR}/${FILE}"
}

word_of_the_session()
{
    local WORD_BANK_FILE=~/RCs/assets/word.bank
    local RAND_WORDS=$(shuf -n 3 $WORD_BANK_FILE)

    echo -e "\n$(tput smso)Session Dictionary$(tput sgr0) "
    while IFS= read -r word; do
        echo -e "\t$(tput smul)$word$(tput sgr0) "
    done <<< "$RAND_WORDS";
    # TODO output defintion
    # local API_ROOT="https://www.dictionaryapi.com/api/v3/references/collegiate/json/"
    # local REQUEST="${API_ROOT}/${RAND_WORD}?key=fd84320f-b3d5-45ec-9dc6-f231ca1b01b6"
    # local data=$(curl $REQUEST 2> /dev/null)
}

setproxy_http()
{
    export http_proxy="$1"
    export HTTP_PROXY="$1"
}

setproxy_https()
{
    export https_proxy="$1"
    export HTTPS_PROXY="$1"
}

setproxy(){
    if [[ -z "$1" ]]; then
        setproxy_http $DEFAULT_PROXY
        setproxy_https $DEFAULT_PROXY
    else
        setproxy_http $1
        setproxy_https $1
    fi
}

unsetproxy(){
    unset http_proxy
    unset HTTP_PROXY
    unset https_proxy
    unset HTTPS_PROXY
}

# Colour definitions
Brown='\e[38;5;138m'
Green='\e[0;32m'
Purple='\e[0;35m'
BGreen='\e[1;32m'
Magenta='\e[95m'
# Color Reset
NC="\e[m"

# PS1 prompt
MY_PS1='\[${NC}\]\[${Magenta}\]$(venv_tag)'         # venv tag
MY_PS1+='\[${NC}\][\[${Brown}\]\h '                 # host
MY_PS1+='\[${Green}\]\t '                           # time
MY_PS1+='\[${Purple}\]\w\[${NC}\]]'                 # pwd
MY_PS1+='\[${BGreen}\]$(parse_git_branch)\[${NC}\]' # git branch
MY_PS1+='\$ \[${NC}\]'                              # Ty Dolla $ign
PROMPT_COMMAND='PS1="'$MY_PS1'";'

export VIRTUAL_ENV_DISABLE_PROMPT
    # Disable virtual env PS1

HISTCONTROL=ignoreboth
    # don't put duplicate lines or lines starting with space in the history.
    # See bash(1) for more options
shopt -s histappend
    # append to the history file, don't overwrite it
export HISTSIZE=
export HISTFILESIZE=
    # History sizes, unbounded for in-memory and file

shopt -s checkwinsize
    # check the window size after each command and, if necessary,
    # update the values of LINES and COLUMNS.

export LS_COLORS=$LS_COLORS:'di=1;32:'
alias ls='ls --color=auto'
    # LS color directories

export VISUAL=vim
export EDITOR="$VISUAL"
    # Default editor

export no_proxy='localhost'

alias vimr="vim -R"
    # Readonly vim

alias tmux="tmux -2"
    # 256 color terminal in tmux

alias objdump="objdump -Mintel"
    # default intel syntax

alias gh="fg"
    # Sometimes I type gh for fg

alias fgfg="fg"
    # Sometimes I type fg, go away, return and retype fg

alias quit="exit"
    # Sometimes I type fg, go away, return and retype fg


set -o vi
    # Inputrc vi mode doesn't work correctly?

if [[ -z "$NO_ARTWORK" ]]; then random_artwork; fi
    # Set $NO_ARTWORK for no artwork

if [[ -z "$NO_WORD_DEFINITION" ]]; then word_of_the_session; fi
    # Set $NO_WORD_DEFINITION for no "word of the session"

PATH=~/RCs/bin:$PATH
